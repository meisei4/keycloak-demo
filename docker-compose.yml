version: '3.8'

networks:
  docker-network-ian:

services:
  nginx:
    image: nginx:latest
    network_mode: "host"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - keycloak1
      - keycloak2


  postgres-db:
    image: postgres:latest
    networks:
      - docker-network-ian
    environment:
      POSTGRES_DB: keycloak_db
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  keycloak1:
    build:
      context: .
      dockerfile: Dockerfile-keycloak
    networks:
      - docker-network-ian
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres-db:5432/keycloak_db
      KC_DB_USERNAME: username
      KC_DB_PASSWORD: password
    volumes:
      - ./realm-export.json:/opt/keycloak/data/import/realm.json:ro
    ports:
      - "8081:8080"
      - "7801:7800"
    command: ["start-dev", "--import-realm", "--cache-config-file=ian-cache-ispn.xml", '--log-level=org.infinispan.CLUSTER:debug']
    depends_on:
      - postgres-db

  keycloak2:
    build:
      context: .
      dockerfile: Dockerfile-keycloak
    network_mode: "host"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://localhost:5432/keycloak_db
      KC_DB_USERNAME: username
      KC_DB_PASSWORD: password
    command: ["start-dev", "--cache-config-file=local-ian-cache-ispn.xml", '--log-level=org.infinispan.CLUSTER:debug']
    depends_on:
      - keycloak1
      - postgres-db

  keycloak-flask-app:
    build:
      context: .
      dockerfile: Dockerfile-app
    networks:
      - docker-network-ian
    ports:
      - "5000:5000"

volumes:
  postgres_data:
